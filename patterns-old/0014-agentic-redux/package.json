{
  "name": "@ai-design-patterns/0014-agentic-redux",
  "version": "1.0.0",
  "description": "Apply Redux-style discipline to AI systems. Agents propose state updates, reducers validate and apply them, and the canonical store remains compact, deterministic, and auditable.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc",
    "dev": "tsc --watch",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage"
  },
  "keywords": [
    "architecture",
    "state-management",
    "redux-pattern",
    "agents",
    "deterministic",
    "auditability"
  ],
  "author": "flyman",
  "license": "MIT",
  "docs": {
    "index": "README.md"
  },
  "devDependencies": {
    "typescript": "^5.0.0",
    "vitest": "^1.0.0",
    "@vitest/coverage-v8": "^1.0.0"
  }
}