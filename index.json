{
  "categories": [
    {
      "id": "adapted",
      "title": "Patterns You Already Know… in AI"
    },
    {
      "id": "orchestration",
      "title": "Orchestration & Reasoning"
    },
    {
      "id": "lifecycle",
      "title": "Agent Lifecycle & Composition"
    },
    {
      "id": "knowledge",
      "title": "Knowledge & Context"
    },
    {
      "id": "protocols",
      "title": "Protocols & Interop"
    },
    {
      "id": "safety",
      "title": "Safety & Policy"
    },
    {
      "id": "quality",
      "title": "Quality & Evaluation"
    },
    {
      "id": "cost",
      "title": "Cost, Latency & Reliability"
    },
    {
      "id": "ux",
      "title": "UX & Product Integration"
    },
    {
      "id": "ops",
      "title": "Ops & Telemetry"
    }
  ],
  "patterns": [
    {
      "id": "agent-factory",
      "title": "Agent Factory",
      "slug": "agent-factory",
      "categories": [
        "adapted",
        "lifecycle"
      ],
      "status": "ready",
      "description": "AI-native version of Factory: quickly instantiates agents from recipes."
    },
    {
      "id": "disposable-agents",
      "title": "Disposable Agents",
      "slug": "disposable-agents",
      "categories": [
        "adapted",
        "lifecycle"
      ],
      "description": "Single-use scripts designed to be fast to create and discard after execution.",
      "status": "ready"
    },
    {
      "id": "adaptive-routing",
      "title": "Adaptive Model Routing",
      "slug": "adaptive-routing",
      "categories": [
        "adapted",
        "cost"
      ],
      "description": "Strategy pattern applied to AI: dynamically choose between models or tools.",
      "status": "ready"
    },
    {
      "id": "streaming-callbacks",
      "title": "Streaming & Callbacks",
      "slug": "streaming-callbacks",
      "categories": [
        "adapted",
        "ux"
      ],
      "description": "Observer applied to LLMs: stream partial outputs and notify clients incrementally.",
      "status": "ready"
    },
    {
      "id": "guardrail-decorator",
      "title": "Guardrail Decorator",
      "slug": "guardrail-decorator",
      "categories": [
        "adapted",
        "safety"
      ],
      "description": "Decorator applied to AI: wrap model calls with critics, validators, or retries."
    },
    {
      "id": "tool-proxy",
      "title": "Tool Proxy",
      "slug": "tool-proxy",
      "categories": [
        "adapted",
        "protocols"
      ],
      "description": "Proxy applied to AI: safe, controlled access to external tools and APIs."
    },
    {
      "id": "tool-fallbacks",
      "title": "Tool Fallbacks",
      "slug": "tool-fallbacks",
      "categories": [
        "adapted",
        "cost"
      ],
      "description": "Circuit Breaker applied to AI: detect tool failures and fall back gracefully."
    },
    {
      "id": "acv",
      "title": "ACV (Agent–Controller–View)",
      "slug": "acv",
      "categories": [
        "adapted",
        "orchestration"
      ],
      "description": "MVC reimagined for AI: separate planning, execution, and UI for clarity."
    },
    {
      "id": "plan-act-reflect",
      "title": "Plan–Act–Reflect",
      "slug": "plan-act-reflect",
      "categories": [
        "orchestration"
      ],
      "description": "Agents loop through planning, execution, and reflection to improve reliability."
    },
    {
      "id": "react-with-tools",
      "title": "ReAct with Tools",
      "slug": "react-with-tools",
      "categories": [
        "orchestration"
      ],
      "description": "Interleave reasoning steps with explicit tool calls and observable traces."
    },
    {
      "id": "subgoal-checkpoints",
      "title": "Subgoal Checkpoints",
      "slug": "subgoal-checkpoints",
      "categories": [
        "orchestration"
      ],
      "description": "Break tasks into measurable subgoals with acceptance criteria."
    },
    {
      "id": "critic-editor",
      "title": "Critic–Editor Loop",
      "slug": "critic-editor",
      "categories": [
        "orchestration",
        "quality"
      ],
      "description": "Draft, critique, and edit iteratively to boost output quality."
    },
    {
      "id": "multi-agent-debate",
      "title": "Multi-Agent Debate",
      "slug": "multi-agent-debate",
      "categories": [
        "orchestration"
      ],
      "description": "Use multiple agents to argue solutions and converge on consensus."
    },
    {
      "id": "memory-triad",
      "title": "Memory Triad",
      "slug": "memory-triad",
      "categories": [
        "knowledge"
      ],
      "description": "Divide memory into episodic, semantic, and procedural layers."
    },
    {
      "id": "rag-2",
      "title": "RAG 2.0",
      "slug": "rag-2",
      "categories": [
        "knowledge"
      ],
      "description": "Segment, retrieve, and synthesize context using hybrid retrieval."
    },
    {
      "id": "context-contracts",
      "title": "Context Windows as Contracts",
      "slug": "context-contracts",
      "categories": [
        "knowledge"
      ],
      "description": "Treat the context window as a strict contract for what knowledge is included."
    },
    {
      "id": "fact-pinning",
      "title": "Fact Pinning",
      "slug": "fact-pinning",
      "categories": [
        "knowledge"
      ],
      "description": "Guarantee inclusion of critical facts in prompts to prevent omissions."
    },
    {
      "id": "guardrail-sandwich",
      "title": "Guardrail Sandwich",
      "slug": "guardrail-sandwich",
      "categories": [
        "safety"
      ],
      "description": "Apply safety filters before, during, and after execution."
    },
    {
      "id": "policy-as-prompt",
      "title": "Policy-as-Prompt",
      "slug": "policy-as-prompt",
      "categories": [
        "safety"
      ],
      "description": "Embed governance policies directly into prompts or system instructions."
    },
    {
      "id": "risk-escalation",
      "title": "Risk-Scored Escalation",
      "slug": "risk-escalation",
      "categories": [
        "safety",
        "ux"
      ],
      "description": "Route outputs through human review when risk scores exceed thresholds."
    },
    {
      "id": "mcp",
      "title": "MCP (Model Context Protocol)",
      "slug": "mcp",
      "categories": [
        "protocols"
      ],
      "description": "Standard protocol for exchanging context and tool contracts across agents."
    },
    {
      "id": "multi-agent-bus",
      "title": "Multi-Agent Messaging Bus",
      "slug": "multi-agent-bus",
      "categories": [
        "protocols"
      ],
      "description": "Structured channel for communication between multiple agents."
    },
    {
      "id": "schema-first-io",
      "title": "Schema-First IO",
      "slug": "schema-first-io",
      "categories": [
        "protocols",
        "safety"
      ],
      "description": "Constrain inputs/outputs to strict schemas with validation and retries."
    },
    {
      "id": "eval-harness",
      "title": "Offline Eval Harness",
      "slug": "eval-harness",
      "categories": [
        "quality"
      ],
      "description": "Framework for evaluating agent behavior against golden datasets."
    },
    {
      "id": "critique-as-data",
      "title": "Critique-as-Data Loop",
      "slug": "critique-as-data",
      "categories": [
        "quality"
      ],
      "description": "Turn critiques and feedback into training/evaluation data."
    },
    {
      "id": "shadow-rollout",
      "title": "Shadow / A-B / Gradual Rollout",
      "slug": "shadow-rollout",
      "categories": [
        "quality",
        "ops"
      ],
      "description": "Release changes in controlled phases to reduce risk."
    },
    {
      "id": "intent-contract-ui",
      "title": "Intent → Contract → UI",
      "slug": "intent-contract-ui",
      "categories": [
        "ux"
      ],
      "description": "Convert user intent into a contract that generates UI elements."
    },
    {
      "id": "explainable-trace",
      "title": "Explainable Trace",
      "slug": "explainable-trace",
      "categories": [
        "ux"
      ],
      "description": "Expose reasoning steps and tool calls to make outputs transparent."
    },
    {
      "id": "confidence-ui",
      "title": "Confidence-Weighted UI",
      "slug": "confidence-ui",
      "categories": [
        "ux"
      ],
      "description": "Visualize model confidence and uncertainty in the interface."
    },
    {
      "id": "interactive-correction",
      "title": "Interactive Correction",
      "slug": "interactive-correction",
      "categories": [
        "ux"
      ],
      "description": "Allow users to steer or correct outputs in real time."
    },
    {
      "id": "draft-approve",
      "title": "Draft-then-Approve",
      "slug": "draft-approve",
      "categories": [
        "ux",
        "safety"
      ],
      "description": "Require human approval of drafts before final execution."
    },
    {
      "id": "undoable-actions",
      "title": "Undoable Actions",
      "slug": "undoable-actions",
      "categories": [
        "ux",
        "safety"
      ],
      "description": "Design agent actions to be reversible by default."
    },
    {
      "id": "versioned-prompts",
      "title": "Versioned Prompts & Agents",
      "slug": "versioned-prompts",
      "categories": [
        "ops"
      ],
      "description": "Track and version-control prompts and agent definitions."
    },
    {
      "id": "telemetry-first",
      "title": "Telemetry-First Agents",
      "slug": "telemetry-first",
      "categories": [
        "ops"
      ],
      "description": "Build agents with monitoring and logging as first-class concerns."
    },
    {
      "id": "observability-hooks",
      "title": "Observability Hooks",
      "slug": "observability-hooks",
      "categories": [
        "ops"
      ],
      "description": "Embed hooks for tracing, metrics, and debugging into workflows."
    },
    {
      "id": "chaos-testing",
      "title": "Chaos Testing for Agents",
      "slug": "chaos-testing",
      "categories": [
        "ops",
        "quality"
      ],
      "description": "Introduce controlled failures to validate resilience and recovery."
    },
    {
      "id": "prompt-drift",
      "title": "Prompt Drift Detection",
      "slug": "prompt-drift",
      "categories": [
        "ops",
        "quality"
      ],
      "description": "Detect and alert when prompts or behaviors diverge from baselines."
    }
  ]
}